*&---------------------------------------------------------------------*
*& Report  Z_ALGORITHMS_MERGE_SORT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_algorithms_merge_sort.

DATA gt_digits TYPE abadr_tab_int4.


INITIALIZATION.
  PERFORM f_populate_data CHANGING
                            gt_digits.

START-OF-SELECTION.
  PERFORM f_write_result  USING
                            gt_digits
                            'Before'.
  PERFORM f_merge_sort    USING gt_digits
                            1
                            10.

END-OF-SELECTION.
  PERFORM f_write_result  USING
                            gt_digits
                            'After'.


*&---------------------------------------------------------------------*
*&      Form  F_MERGE_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_DIGITS  text
*      -->P_1      text
*      -->P_8      text
*----------------------------------------------------------------------*
FORM f_merge_sort  USING    ut_digits TYPE abadr_tab_int4
                            value(uv_start)
                            value(uv_end).
  DATA:
    lv_temp         TYPE p DECIMALS 2,
    lv_middle       TYPE int4,
    lv_middle_next  TYPE int4.

  IF uv_start < uv_end.
    lv_temp = FLOOR( ( uv_start + uv_end ) / 2 ).
    lv_middle = lv_temp.
    lv_middle_next = lv_middle + 1.
    PERFORM f_merge_sort  USING ut_digits
                                uv_start
                                lv_middle.
    PERFORM f_merge_sort  USING ut_digits
                                lv_middle_next
                                uv_end.
    PERFORM f_merge       USING ut_digits
                                uv_start
                                lv_middle
                                uv_end.

  ENDIF.

ENDFORM.                    " F_MERGE_SORT
*&---------------------------------------------------------------------*
*&      Form  f_populate_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_DIGITS  text
*----------------------------------------------------------------------*
FORM f_populate_data  CHANGING ct_digits TYPE abadr_tab_int4.

  DATA:
    lv_int4 TYPE int4.

  DO 10 TIMES.
    CALL FUNCTION 'GENERAL_GET_RANDOM_INT'
      EXPORTING
        range  = 100
      IMPORTING
        random = lv_int4.

    APPEND lv_int4 TO ct_digits.
  ENDDO.

*  DO 10 TIMES.
*    CASE sy-index.
*      WHEN 1.
*        lv_int4 = 12.
*      WHEN 2.
*        lv_int4 = 9.
*      WHEN 3.
*        lv_int4 = 3.
*      WHEN 4.
*        lv_int4 = 7.
*      WHEN 5.
*        lv_int4 = 14.
*      WHEN 6.
*        lv_int4 = 11.
*      WHEN 7.
*        lv_int4 = 6.
*      WHEN 8.
*        lv_int4 = 2.
*      WHEN 9.
*        lv_int4 = 10.
*      WHEN 10.
*        lv_int4 = 5.
*      WHEN OTHERS.
*    ENDCASE.
*    APPEND lv_int4 TO ct_digits.
*  ENDDO.

ENDFORM.                    " f_populate_data
*&---------------------------------------------------------------------*
*&      Form  F_WRITE_RESULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_DIGITS  text
*----------------------------------------------------------------------*
FORM f_write_result USING
                      ut_digits TYPE abadr_tab_int4
                      uv_title  TYPE string.

  DATA lv_int4 TYPE int4.

  WRITE:
    uv_title,
    /.

  LOOP AT ut_digits INTO lv_int4.
    WRITE lv_int4.
  ENDLOOP.

ENDFORM.                    " F_WRITE_RESULT
*&---------------------------------------------------------------------*
*&      Form  F_MERGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_UT_DIGITS  text
*      -->P_UV_START  text
*      -->P_LV_MIDDLE  text
*      -->P_UV_END  text
*----------------------------------------------------------------------*
FORM f_merge  USING
                ut_digits TYPE abadr_tab_int4
                uv_start  TYPE int4
                uv_middle TYPE int4
                uv_end    TYPE int4.

  DATA:
    lv_digit        TYPE int4,
    lv_middle_next  TYPE int4,
    lv_index_l      TYPE sy-index VALUE 1,
    lv_index_r      TYPE sy-index VALUE 1.

  DATA:
    lt_seq_l        TYPE abadr_tab_int4,
    ls_seq_l        LIKE LINE OF lt_seq_l,
    lt_seq_r        TYPE abadr_tab_int4,
    ls_seq_r        LIKE LINE OF lt_seq_r.

  FIELD-SYMBOLS:
    <fs_digit>      TYPE int4.


  lv_middle_next = uv_middle + 1.

  LOOP AT ut_digits INTO lv_digit FROM uv_start TO uv_middle.
    APPEND lv_digit TO lt_seq_l.
  ENDLOOP.

  LOOP AT ut_digits INTO lv_digit FROM lv_middle_next TO uv_end.
    APPEND lv_digit TO lt_seq_r.
  ENDLOOP.

* Put a sentinel on the bottom
  APPEND 999 TO lt_seq_l.
  APPEND 999 TO lt_seq_r.

  LOOP AT ut_digits ASSIGNING <fs_digit> FROM uv_start TO uv_end.
    READ TABLE lt_seq_l INTO ls_seq_l INDEX lv_index_l.
    READ TABLE lt_seq_r INTO ls_seq_r INDEX lv_index_r.
    IF ls_seq_l < ls_seq_r.
      <fs_digit> = ls_seq_l.
      lv_index_l = lv_index_l + 1.
    ELSE.
      <fs_digit> = ls_seq_r.
      lv_index_r = lv_index_r + 1.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " F_MERGE
